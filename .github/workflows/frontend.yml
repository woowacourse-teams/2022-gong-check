name: frontend
on:
  pull_request:
    branches: [dev]
    paths: ['frontend/**']
    types: [opened, synchronize, reopened]

defaults:
  run:
    working-directory: frontend

jobs:
  sonarcloud:
    name: sonar frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build

  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install packages ci
        run: |
          npm ci

      - name: Build
        run: |
          npm run build

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm install -g @lhci/cli
          lhci autorun || echo "LHCI failed!"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('${{ github.workspace }}/frontend/lhci_reports/manifest.json'));
            let comments = "";


            const { summary, jsonPath } = results[0];

            const details = JSON.parse(fs.readFileSync(jsonPath));
            const { audits } = details;

            const formatResult = (res) => Math.round(res * 100);

            Object.keys(summary).forEach(
              (key) => (summary[key] = formatResult(summary[key]))
            );

            const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

            const comment = [
              `‚ö°Ô∏è Lighthouse report!`,
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(summary.performance)} Performance | ${summary.performance} |`,
              `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
              `| ${score(summary[`best-practices`])} Best Practices | ${summary[`best-practices`]} |`,
              `| ${score(summary.seo)} Seo | ${summary.seo} |`,
              `| ${score(summary.pwa)} Pwa | ${summary.pwa} |`
            ].join("\n");

            const detail = [
              ``,
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(
                audits[`first-contentful-paint`].score * 100
              )} First Contentful Paint | ${
                audits[`first-contentful-paint`].displayValue
              } |`,
              `| ${score(
                audits[`speed-index`].score * 100
              )} Speed Index | ${
                audits[`speed-index`].displayValue
              } |`,
              `| ${score(
                audits[`total-blocking-time`].score * 100
              )} Total Blocking Time | ${
                audits[`total-blocking-time`].displayValue
              } |`,
              `| ${score(
                audits[`largest-contentful-paint`].score * 100
              )} Largest Contentful Paint | ${
                audits[`largest-contentful-paint`].displayValue
              } |`,
              `| ${score(
                audits[`cumulative-layout-shift`].score * 100
              )} Cumulative Layout Shift | ${
                audits[`cumulative-layout-shift`].displayValue
              } |`
            ].join("\n");

            comments += comment + "\n" + detail + "\n";

            core.setOutput('comments', comments);

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}

  cypress-run:
    name: Cypress E2E Test CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: frontend

      - name: Merge Results
        run: npm run report:merge

      - name: Format Cypress Result
        id: format_cypress_result
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('${{ github.workspace }}/frontend/cypress.result.json'));
            let comments = "";

            const {passes, failures, pending, duration, passPercent, skipped} = results.stats;

            const comment = [
              `‚≠êÔ∏è Cypress E2E Test Result`,
              `| Result | Passed‚úÖ | Failed‚ùå | Pending‚úã | Skipped‚Ü©Ô∏è | Durationüïê |`,
              `| --- | --- | --- | --- | --- | --- |`,
              `| ${passPercent === 100 ? 'SuccessüòÄ' : 'FailedüòÇ'} | ${passes} | ${failures} | ${pending} | ${skipped} | ${duration/10000}s |`,
            ].join("\n");

            comments += comment;

            core.setOutput('comments', comments);

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_cypress_result.outputs.comments}}
